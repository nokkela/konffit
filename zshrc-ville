# Adds the arguments from the last commadn to the autocomplete list
# I wasn't able to get this to work standalone and still print out both regular
# completion plus the last args, but this works well enough.

_complete_plus_last_command_args() {
        last_command=$history[$[HISTCMD-1]]
        last_command_array=("${(s/ /)last_command}") 
        _sep_parts last_command_array
        _complete 
}


_force_rehash() {
        (( CURRENT == 1 )) && rehash
        return 1  # Because we didn't really complete anything
}

zstyle ':completion:*' auto-description '%d'
zstyle ':completion:*' completer _list _oldlist _expand _complete _force_rehash _complete_plus_last_command_args _ignored _match _correct _approximate _prefix
zstyle ':completion:*' completions 1
zstyle ':completion:*' format '%d'
zstyle ':completion:*' glob 1
zstyle ':completion:*' group-name ''
zstyle ':completion:*' insert-unambiguous true
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '+r:|[._-]=* r:|=*' '+m:{[:lower:]}={[:upper:]}' '+m:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+l:|=* r:|=*'
zstyle ':completion:*' max-errors 2 numeric
zstyle ':completion:*' menu select=long-list select=0 select=0
zstyle ':completion:*' original true
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' prompt '%e'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' substitute 1
zstyle ':completion:*' use-compctl true
zstyle ':completion:*' verbose true
zstyle ':completion::complete:*' use-cache 1
zstyle :compinstall filename '/home/ville/.zshrc'

autoload -Uz compinit
compinit
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
DIRSTACKSIZE=16
setopt appendhistory braceccl correct extendedglob nomatch notify interactivecomments
setopt pushdminus pushdignoredups pushdsilent pushdtohome
setopt extendedhistory histignoredups histreduceblanks
unsetopt autocd beep
bindkey -v
bindkey "^R" history-incremental-search-backward
bindkey '\e.' insert-last-word
autoload -U promptinit
promptinit; prompt elite2
autoload -U colors && colors
autoload -U zmv
PROMPT="%{$fg[red]%}fyndig%{$reset_color%}@%{$fg[blue]%}%m %{$fg_no_bold[yellow]%}%1~ %{$reset_color%}%#"
RPROMPT="[%{$fg_no_bold[yellow]%}%? %* %D%{$reset_color%}]"
path=('/home/ville/bin' $path)
export PATH
export EDITOR=vim
export PAGER=less
export MANPAGER=less
export MPD_HOST="127.0.0.1"
export MPD_PORT=6600
alias less=$PAGER
eval $(dircolors -b /etc/DIR_COLORS)
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'
alias grep='grep --colour=auto'
alias ls='ls --color=auto'
alias dh='dirs -v'
umask 077

precmd() { 
        RPROMPT="[%{$fg_no_bold[yellow]%}%? %* %D (INS)%{$reset_color%}]" 
        }

zle-keymap-select() {
        RPROMPT="[%{$fg_no_bold[yellow]%}%? %* %D (INS)%{$reset_color%}]"
        [[ $KEYMAP = vicmd ]] && RPROMPT="[%{$fg_no_bold[yellow]%}%? %* %D (CMD)%{$reset_color%}]"
                () { return $__prompt_status }
                        zle reset-prompt
        }

zle-line-init() {
        typeset -g __prompt_status="$?"
        }

zle -N zle-keymap-select
zle -N zle-line-init
zle -N _force_rehash
zle -N _complete_plus_last_command_args

DISABLE_AUTO_TITLE="true"
function set_terminal_title() {
  echo -en "\e]2;$@\a"
}
